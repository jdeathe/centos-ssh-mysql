# ------------------------------------------------------------------------------
# Naming convention:
#
#    centos-ssh-mysql@.service = {service-unit-install-template-name}
#          |
#          +-------------------- {image-name}
#
#    mysql@.service = {service-unit-template-name}
#      |
#      +------------- {service-unit-name}
#
#    mysql@1.service = {service-unit-instance-name}
#      |   |
#      |   +---------- {service-unit-instance}
#      +-------------- {service-unit-name}
#
#    mysql.1 = {service-unit-long-name}
#      |   |
#      |   +-- {service-unit-instance}
#      +------ {service-unit-name}
#
# To install:
#     sudo cat {service-unit-install-template-name} \
#       > /etc/systemd/system/{service-unit-template-name}
#     sudo systemctl daemon-reload
#     sudo systemctl enable -f {service-unit-instance-name}
#
# Start using:
#     sudo systemctl [start|stop|restart|kill|status] \
#       {service-unit-instance-name}
#
# Debugging:
#     sudo systemctl status {service-unit-instance-name}
#     journalctl -fn 50 -u {service-unit-instance-name}
#
# To uninstall:
#     sudo systemctl disable -f {service-unit-instance-name}
#     sudo systemctl daemon-reload
#     sudo systemctl stop {service-unit-instance-name}
#     sudo rm /etc/systemd/system/{service-unit-template-name}
#     sudo docker rm -f {service-unit-long-name}
# ------------------------------------------------------------------------------

[Unit]
Description=centos-ssh-mysql // %p@%i
Requires=docker.service
After=docker.service

[Service]
Restart=on-failure
RestartSec=30
TimeoutStartSec=1200
Environment="DOCKER_CONTAINER_OPTS="
Environment="DOCKER_IMAGE_NAME=centos-ssh-mysql"
Environment="DOCKER_IMAGE_PACKAGE_PATH=/var/opt/scmi/packages"
Environment="DOCKER_IMAGE_TAG={{RELEASE_VERSION}}"
Environment="DOCKER_PORT_MAP_TCP_3306=3306"
Environment="DOCKER_USER=jdeathe"
Environment="ENABLE_MYSQLD_BOOTSTRAP=true"
Environment="ENABLE_MYSQLD_WRAPPER=true"
Environment="MYSQL_INIT_LIMIT=10"
Environment="MYSQL_INIT_SQL="
Environment="MYSQL_ROOT_PASSWORD="
Environment="MYSQL_ROOT_PASSWORD_HASHED=false"
Environment="MYSQL_SUBNET=127.0.0.1"
Environment="MYSQL_USER="
Environment="MYSQL_USER_DATABASE="
Environment="MYSQL_USER_PASSWORD="
Environment="MYSQL_USER_PASSWORD_HASHED=false"
Environment="SYSTEM_TIMEZONE=UTC"

# Initialisation: Load image from local storage if available, otherwise pull.
ExecStartPre=/bin/bash -c \
  "if [[ -z \"$(/usr/bin/docker images -q \
      ${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} \
    )\" ]] \
    && [[ -z \"$(/usr/bin/docker images -q \
      docker.io/${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} \
    )\" ]]; \
  then \
    if [[ -f ${DOCKER_IMAGE_PACKAGE_PATH}/${DOCKER_USER}/${DOCKER_IMAGE_NAME}.${DOCKER_IMAGE_TAG}.tar.xz ]]; \
    then \
      printf -- '%%s/%%s/%%s.%%s.tar.xz\n' \
        \"${DOCKER_IMAGE_PACKAGE_PATH}\" \
        \"${DOCKER_USER}\" \
        \"${DOCKER_IMAGE_NAME}\" \
        \"${DOCKER_IMAGE_TAG}\" \
      | /usr/bin/xargs /usr/bin/xz -dc \
      | /usr/bin/docker load; \
    else \
      printf -- '%%s/%%s:%%s\n' \
        \"${DOCKER_USER}\" \
        \"${DOCKER_IMAGE_NAME}\" \
        \"${DOCKER_IMAGE_TAG}\" \
      | /usr/bin/xargs /usr/bin/docker pull; \
    fi; \
  fi"

# Terminate existing container to allow for redeployment
ExecStartPre=-/bin/bash -c \
  "if [[ -n $(/usr/bin/docker ps -aq --filter \"name=%p.%i\") ]]; \
  then \
    if [[ -n $(/usr/bin/docker ps -aq \
        --filter \"name=%p.%i\" \
        --filter \"status=paused\" \
      ) ]]; \
    then \
      /usr/bin/docker unpause %p.%i; \
    fi; \
    if [[ -n $(/usr/bin/docker ps -aq \
        --filter \"name=%p.%i\" \
        --filter \"status=running\" \
      ) ]]; \
    then \
      /usr/bin/docker stop %p.%i; \
    fi; \
    if [[ -n $(/usr/bin/docker ps -aq --filter \"name=%p.%i\") ]]; \
    then \
      /usr/bin/docker rm -f %p.%i; \
    fi; \
  fi"

# Startup
ExecStart=/bin/bash -c \
  "exec /usr/bin/docker run \
    --name %p.%i \
    --env \"ENABLE_MYSQLD_BOOTSTRAP=${ENABLE_MYSQLD_BOOTSTRAP}\" \
    --env \"ENABLE_MYSQLD_WRAPPER=${ENABLE_MYSQLD_WRAPPER}\" \
    --env \"MYSQL_INIT_LIMIT=${MYSQL_INIT_LIMIT}\" \
    --env \"MYSQL_INIT_SQL=${MYSQL_INIT_SQL}\" \
    --env \"MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\" \
    --env \"MYSQL_ROOT_PASSWORD_HASHED=${MYSQL_ROOT_PASSWORD_HASHED}\" \
    --env \"MYSQL_SUBNET=${MYSQL_SUBNET}\" \
    --env \"MYSQL_USER=${MYSQL_USER}\" \
    --env \"MYSQL_USER_DATABASE=${MYSQL_USER_DATABASE}\" \
    --env \"MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}\" \
    --env \"MYSQL_USER_PASSWORD_HASHED=${MYSQL_USER_PASSWORD_HASHED}\" \
    --env \"SYSTEM_TIMEZONE=${SYSTEM_TIMEZONE}\" \
    $(if [[ ${DOCKER_PORT_MAP_TCP_3306} != NULL ]]; \
    then \
      if /bin/grep -qE \
          '^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:)?[1-9][0-9]*$' \
          <<< \"${DOCKER_PORT_MAP_TCP_3306}\"; \
        && /bin/grep -qE \
          '^.+\.[0-9]+(\.[0-9]+)?$' \
          <<< %p.%i; \
      then \
        printf -- '--publish %%s%%s:3306' \
          $(\
            /bin/grep -o \
              '^[0-9\.]*:' \
              <<< \"${DOCKER_PORT_MAP_TCP_3306}\" \
          ) \
          $(( \
            $(\
              /bin/grep -oE \
                '[0-9]+$' \
                <<< \"${DOCKER_PORT_MAP_TCP_3306}\" \
            ) \
            + $(\
              /bin/grep -oE \
                '^[0-9]+' \
                <<< %i \
            ) \
            - 1 \
          )); \
      else \
        printf -- '--publish %%s:3306' \
          \"${DOCKER_PORT_MAP_TCP_3306}\"; \
      fi; \
    fi) \
    ${DOCKER_CONTAINER_OPTS} \
    ${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}; \
  "

# Shutdown
ExecStop=/usr/bin/docker stop --time 10 %p.%i

[Install]
DefaultInstance=1
WantedBy=multi-user.target
